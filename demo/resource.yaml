# So resource == patchedResource ---> pass (cp)
# skip (p)
apiVersion: v1
kind: Pod
metadata:
  labels:
    foo: bar
    color: orange
  name: pod-matches-for-clusterpolicy
  namespace: notinpolicyns
spec:
  containers:
  - image: nginx:latest
    name: nginx
---

# resource == patchedResource ---> pass (cp)
# pass (p)
apiVersion: v1
kind: Pod
metadata:
  labels:
    foo: bar
    color: orange
  name: pod-matches-for-both-policy
  namespace: sameaspolicyns
spec:
  containers:
  - image: nginx:latest
    name: nginx
  dnsConfig:
    options:
    - name: ndots
      value: "1"

---
#  pass (cp)
#  pass(p)
apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels:
    foo: bar
  namespace: sameaspolicyns
spec:
  containers:
  - name: nginx
    image: nginx:latest

---
#  pass (cp)
#  skip(p)
apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels:
    foo: bar
  namespace: notinpolicyns
spec:
  containers:
  - name: nginx
    image: nginx:latest
---
# pass(cp)
# pass(p)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-pod
  labels:
    app: nginx
  namespace: sameaspolicyns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80

---
# pass(cp)
# skip(p)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-pod
  labels:
    app: nginx
  namespace: notinpolicyns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
